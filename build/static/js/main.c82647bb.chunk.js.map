{"version":3,"sources":["components/Header.js","components/LoginPage.js","components/SignUpPage.js","components/Welcome.js","components/About.js","components/NotFoundPage.js","components/SignOut.js","routers/AppRouter.js","app.js","serviceWorker.js","index.js"],"names":["Header","props","title","Props","LoginPage","onSubmit","e","preventDefault","state","username","password","setState","error","history","push","className","console","log","handleChange","event","target","name","value","bind","type","size","this","htmlFor","placeholder","onChange","Link","to","Component","SignupPage","fullname","email","Welcome","About","NotFoundPage","SignOut","AppRouter","Switch","Route","exact","path","component","SignUpPage","Simple","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c82647bb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = (props) => {\n    return (\n        <div>\n            <h1 >{props.title}</h1>\n           \n        </div>\n    )\n}\n\nHeader.Props = {\n    title: 'LOGIN FORM '\n  };\nexport default Header","import '../assets/scss/login.scss';\nimport React, { Component } from 'react';\nimport { IoLogoGoogle } from 'react-icons/io';\n//import Welcome from './Welcome'\nimport { Link } from 'react-router-dom'\n\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            error: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    // handleSubmit = (e) => {\n    //     e.preventDefault()\n    //     console.log(\"Submitting\");\n    //     console.log(this.state);\n    //   };\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        if (!this.state.username || !this.state.password) {\n            this.setState(() => ({ error:<h1  className=\"text-secondary\">PLEASE PROVIDE DETAILS OR SIGN UP</h1>}));\n            console.log(this.state);\n        } else {\n            this.setState(() => ({ error: '' }));\n            this.props.history.push('Welcome')\n        }\n    };\n    // onSubmit = (e) => {\n    //     e.preventDefault()\n    //     if (!this.state.username || !this.state.password) {\n    //         this.setState(() => ({ error: 'Please provide username and password or sign up ' }));\n    //         console.log(this.state);  \n    //     } else {\n    //         this.setState(() => ({ error: '' }));\n    //         this.props.history.push('Welcome')\n    //     }}\n\n            // this.handleChange()\n            // // this.props.onSubmit({\n            // //   username: this.state.username,\n            // //   password: this.state.password,\n            // // });\n            // console.log(this.state);    \n        \n        // console.log(\"Submitting\");\n        // console.log(this.state);\n\n    \n     //handleSignUp = (e) => {\n    //     e.preventDefault()\n    //     // console.log(\"moving to sign up page\");\n    //     // console.log(this.state);\n    // };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        return (\n            <div className=\"container py-5\">\n\n                <div className=\"row align-items-center no-gutters\">\n                    <div className=\"col-md-5 minion-box text-center\">\n                        <h1 className=\"text-white my-5\">SIGN IN</h1>\n                        <button type=\"button\" className=\"btn btn-outline-light btn-lg my-5\"> <IoLogoGoogle size={18} /> &nbsp;&nbsp;&nbsp;&nbsp;Continue with Google</button>\n                    </div>\n                    <div className=\"col-md form-container\">\n                    \n                        {this.state.error && <p>{this.state.error}</p>}\n                        <form onSubmit={this.onSubmit}>\n                            {/* <form> */}\n                            <div className=\"form-group mb-5\">\n                                <label htmlFor='username' className=\"custom-label\">USERNAME</label>\n                                <input\n                                    className=\"form-control form-control-lg\"\n                                    name='username'\n                                    type='text'\n                                    placeholder='please enter your username'\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                /> \n                                </div>\n                            <div className=\"form-group\">\n                                <label htmlFor='password' className=\"custom-label\">PASSWORD</label>\n                                <input\n                                    name='password'\n                                    type='password'\n                                    placeholder='enter your password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <div className=\"text-center\">\n                                {/* <Link to = '/Welcome'> */}\n                                <button  className=\"btn btn-primary my-5\"> Continue </button>\n                                {/* </Link> */}\n                            </div>\n{/* type=\"button\" */}\n                            <h5 className=\"text-center\">Or\n                            <div>\n                                <Link to='/SignUp'>\n                                    <button type=\"button\" className=\"btn btn-primary my-5\">Sign Up</button>\n                                    {/* btn btn-link */}\n                                </Link></div>\n                            </h5>\n                         </form>\n                        \n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n} //onClick= {this.handleSignUp}\n//onClick={this.handleLogin}\nexport default LoginPage;","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Header from './Header'\n\nclass SignupPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n            fullname: '',\n            email: '',\n            username: '',\n            password:''\n\n        }\n    }\n\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        console.log(\"Submitting\");\n        console.log(this.state);\n    }\n    // handleNewSignUp = (e) => {\n    //     e.preventDefault()\n    //     console.log(\"move to login page\");\n    //     console.log(this.state);\n    //   };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render () {\n        return (\n            // <div>htmlFor = 'firstName'\n            <div>\n                <h1 className=\"text-white my-5\">SIGN UP HERE</h1>\n               <form onSubmit = {this.onSubmit}>\n                   <label htmlFor = 'fName' >FullName</label>\n                   <input\n                    name='fullname'\n                    type='text'\n                   placeholder = 'Enter your full name'\n                   value = {this.state.fullname}\n                   onChange= {this.handleChange}\n                   />\n                \n\n                   <label htmlFor = 'email'>e-mail</label>\n                   <input\n                   name = 'email'\n                   type = 'text'\n                   placeholder = 'Enter your email name'\n                   value = {this.state.email}\n                   onChange= {this.handleChange}\n                   />\n\n                   <label htmlFor = 'username'>Username</label>\n                   <input\n                   name='username'\n                   type='text'\n                   placeholder = 'Enter a unique user name'\n                   value = {this.state.username}\n                   onChange= {this.handleChange}\n                   />\n\n                   <label htmlFor = 'password'>Password</label>\n                   <input\n                   name = 'password'\n                   type = 'password'\n                   placeholder = 'Enter a seven digit password that included a number'\n                   value = {this.state.password}\n                   onChange= {this.handleChange}\n                   />\n                   <div className=\"text-center\" >\n                   <Link to = '/'>\n                   <button type = \"button\" \n                    className=\"btn btn-outline-light  my-5\">\n                    sign Up</button>\n                   </Link> \n                   </div>\n\n                   <h5 className=\"text-center\"> Already Have An Account </h5>\n\n                            <div className=\"text-center\" >\n                                <Link to='/'>\n                                    <button type=\"button\" \n                                    className=\"btn btn-outline-light btn-lg my-5\">\n                                    login</button>\n                                    {/* btn btn-link */}\n                                </Link></div>\n                            \n                   </form> \n            </div>\n        )\n    }\n}\n// onClick={this.handleNewSignUp}\nexport default SignupPage","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Welcome = () => {\n    return (\n        <div>\n            <h1 className='text-white text-center'>Welcome To TeamDelta's Login App</h1>\n            <div className = \" text-center\">\n            <Link to = {'/SignOut'}>\n            <button type = 'button' className=\"btn btn-outline-light btn-lg my-5\">Sign Out</button>\n            </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Welcome","import React from 'react'\n\nconst About = () => {\n    return (\n        <div>\n            <h1>HNG Stage 1</h1>\n        </div>\n    )\n}\n\nexport default About","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport '../App.css'\r\n\r\nconst SignOut = () => {\r\n    return (\r\n        <div className='signOut'>\r\n        <h1 >Hope to see you again soon   </h1>\r\n            <div className = 'text-center'>\r\n             <Link to = {'/'}>\r\n            <button   type= 'button' className=\"btn btn-outline-light btn-lg my-5\">\r\n            Log In\r\n            </button>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}//type = 'button'\r\n\r\n//btn btn-light btn-lg my-5\r\n//text-white text-center\r\nexport default SignOut","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport LoginPage from '../components/LoginPage'\nimport SignUpPage from '../components/SignUpPage'\nimport Welcome from '../components/Welcome'\nimport About from '../components/About'\nimport NotFoundPage from '../components/NotFoundPage'\nimport SignOut from '../components/SignOut'\n\nconst AppRouter = () => (\n    <Router>\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\" component={LoginPage} />\n                <Route path={`/SignUp`} component={SignUpPage} />\n                <Route path=\"/About\" component={About} />\n                <Route path={`/Welcome`} component={Welcome} />\n                <Route path=\"/SignOut\" component={SignOut} />\n                <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n    </Router>\n\n);\n\n\nexport default AppRouter;     ","import React, { Component } from 'react'\n//import LoginPage from './components/LoginPage'\nimport './App.css'\nimport 'normalize.css/normalize.css'\nimport AppRouter from './routers/AppRouter'\n//import Header from './components/Header'\n\nclass Simple extends Component {\n    render () {\n        return (\n            <div>\n                {/* <Header/>\n               <LoginPage/>  */}\n               <AppRouter/>\n            </div>\n        )\n    }\n}\n\nexport default Simple","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './assets/scss/custom.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}