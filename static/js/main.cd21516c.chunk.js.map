{"version":3,"sources":["components/Header.js","components/LoginPage.js","components/SignUpPage.js","components/Welcome.js","components/About.js","components/NotFoundPage.js","routers/AppRouter.js","app.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","title","Props","LoginPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","preventDefault","state","username","password","setState","error","history","push","console","log","handleSignUp","handleChange","event","defineProperty","target","name","value","bind","assertThisInitialized","htmlFor","type","placeholder","onChange","Link","to","Component","SignupPage","fullName","email","userName","Welcome","About","NotFoundPage","AppRouter","BrowserRouter","components_Header","Switch","Route","exact","path","component","SignUpPage","Simple","routers_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd21516c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <h1 >{props.title}</h1>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.Props = {\r\n    title: 'LOGIN FORM '\r\n  };\r\nexport default Header","import React, { Component } from 'react';\r\n//import Welcome from './Welcome'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    // handleSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(\"Submitting\");\r\n    //     console.log(this.state);\r\n    //   };\r\n\r\n    \r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.username || !this.state.password) {\r\n            this.setState(() => ({ error: 'Please provide username and password or sign up ' }));\r\n            console.log(this.state);  \r\n        } else {\r\n            this.setState(() => ({ error: '' }));\r\n            this.props.history.push('Welcome')\r\n        \r\n            // this.handleChange()\r\n            // // this.props.onSubmit({\r\n            // //   username: this.state.username,\r\n            // //   password: this.state.password,\r\n            // // });\r\n            // console.log(this.state);    \r\n          }\r\n        // console.log(\"Submitting\");\r\n        // console.log(this.state);\r\n        \r\n      };\r\n      handleSignUp = (e) => {\r\n        e.preventDefault()\r\n        // console.log(\"moving to sign up page\");\r\n        // console.log(this.state);\r\n      };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        // const ConditionalLink = !this.onSubmit ? Link : React.DOM.div\r\n        return (\r\n            <div>\r\n                {this.state.error && <p>{this.state.error}</p>}\r\n             <form onSubmit= {this.onSubmit}>\r\n             {/* <form> */}\r\n             <div>\r\n                <label  htmlFor = 'username'>username</label>\r\n                    <input \r\n                    name = 'username'\r\n                    type = 'text'\r\n                    placeholder = 'please enter your username'\r\n                    value = {this.state.username}\r\n                    onChange= {this.handleChange}\r\n                    /> </div>\r\n\r\n                    <div>\r\n                    <label htmlFor= 'password'>password</label>\r\n                    <input\r\n                    name = 'password'\r\n                    type = 'password'\r\n                    placeholder = 'enter your password'\r\n                    value = {this.state.password}\r\n                    onChange = {this.handleChange}\r\n                    />\r\n                    </div>\r\n\r\n                    {/* <Link to = '/Welcome'> */}\r\n                    <button>\r\n                    Log In \r\n                    </button>\r\n                     {/* </Link> */}\r\n\r\n                    <h1>Not registered yet, sign up below </h1>\r\n\r\n                    <Link to = '/SignUp'> \r\n                    <button >Sign Up</button>\r\n                    </Link>\r\n                   \r\n                </form>   \r\n            </div>\r\n        );\r\n        \r\n    }\r\n} //onClick= {this.handleSignUp}\r\n//onClick={this.handleLogin}\r\nexport default LoginPage;","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SignupPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n            fullName: '',\r\n            \r\n            email: '',\r\n            userName: '',\r\n            password:''\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"Submitting\");\r\n        console.log(this.state);\r\n    }\r\n    // handleNewSignUp = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(\"move to login page\");\r\n    //     console.log(this.state);\r\n    //   };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            // <div>htmlFor = 'firstName'\r\n            <div>\r\n               <form onSubmit = {this.onSubmit}>\r\n                   <label htmlFor = 'firstName' >FullName</label>\r\n                   <input\r\n                   \r\n                   type = 'text'\r\n                   placeholder = 'Enter your first name'\r\n                   value = {this.state.fullName}\r\n                   onChange= {this.handleChange}\r\n                   />\r\n                \r\n\r\n                   <label htmlFor = 'email'>e-mail</label>\r\n                   <input\r\n                   name = 'email'\r\n                   type = 'text'\r\n                   placeholder = 'Enter your email name'\r\n                   value = {this.state.email}\r\n                   onChange= {this.handleChange}\r\n                   />\r\n\r\n                   <label htmlFor = 'username'>Username</label>\r\n                   <input\r\n                   type = 'text'\r\n                   name = 'text'\r\n                   placeholder = 'Enter a unique user name'\r\n                   value = {this.state.userName}\r\n                   onChange= {this.handleChange}\r\n                   />\r\n\r\n                   <label htmlFor = 'password'>Password</label>\r\n                   <input\r\n                   name = 'password'\r\n                   type = 'password'\r\n                   placeholder = 'Enter a seven digit password that included a number'\r\n                   value = {this.state.password}\r\n                   onChange= {this.handleChange}\r\n                   />\r\n                   <Link to = '/'>\r\n                   <button>sign Up</button></Link>\r\n                   </form> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n// onClick={this.handleNewSignUp}\r\nexport default SignupPage","import React from 'react'\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <div>\r\n            <h2>Welcome</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1>HNG Stage 1</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from '../components/Header';\nimport LoginPage from '../components/LoginPage'\nimport SignUpPage from '../components/SignUpPage'\nimport Welcome from '../components/Welcome'\nimport About from '../components/About'\nimport NotFoundPage from '../components/NotFoundPage'\n\nconst AppRouter = () => (\n    <Router>\n    <div>\n      <Header/>\n      <hr />\n      \n      <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route path=\"/SignUp\" component={SignUpPage} /> \n      <Route path=\"/About\" component={About} />\n      <Route path=\"/Welcome\" component={Welcome} />\n      <Route component={NotFoundPage} />\n      </Switch>\n      </div>\n  </Router>\n\n      );\n      \n\nexport default AppRouter;     ","import React, { Component } from 'react'\n//import LoginPage from './components/LoginPage'\nimport './App.css'\nimport AppRouter from './routers/AppRouter'\n//import Header from './components/Header'\n\nclass Simple extends Component {\n    render () {\n        return (\n            <div>\n                {/* <Header/>\n               <LoginPage/>  */}\n               <AppRouter/>\n            </div>\n        )\n    }\n}\n\nexport default Simple","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}